{"version":3,"sources":["data/geojson-files/rios_tdf.geojson","data/geojson-files/cuenca_rio_grande.geojson","data/geojson-files/cuenca_rio_chico.geojson","components/Navbar.js","components/Mapa.js","components/Section.js","components/CardData.js","components/CardInfo.js","components/PlotlyChart.js","components/PlotlyTable.js","components/LayerButton.js","components/LayerModal.js","MapaContainer.js","services/CaudalesService.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","style","backgroundColor","href","Component","Mapa","props","children","id","width","height","Section","CardData","CardInfo","caudalesData","nombre","descripcion","PlotlyChart","react_plotly_default","data","x","y","type","mode","marker","color","layout","title","caudal_desc","xaxis","xaxisTitle","showgrid","zeroline","yaxis","yaxisTitle","showline","autosize","useResizeHandler","PlotlyTable","header","values","align","line","fill","font","family","size","cells","caudales_promedio","LayerButton","Fragment","onClick","handleOpenModal","react_fontawesome_index_es","icon","faLayerGroup","LayerModal","modalIsOpen","ReactDOM","createPortal","handleCloseModal","Form","Group","Check","defaultChecked","checked","onChange","handleCheck","label","cuencaRgChecked","cuencaRcChecked","faMap","name","mapaCheck","value","handleCheckMap","document","getElementById","scroll","Scroll","animateScroll","MapaContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","mapaStyleControl","handleCheckCapa","capaControl","e","setState","state","featureName","featureTable","center","zoom","showSection","osmLayer","TileLayer","source","OlSourceOsm","osmLanscape","visible","attributions","ATTRIBUTION","url","stamenLayer","Stamen","layer","bingMaps","BingMaps","key","imagerySet","vectorSource","VectorSource","geojsonFile","format","GeoJSON","vector","VectorLayer","cuencaRgSource","cuencaRG","cuencaRgVector","cuencaRcSource","cuencaRC","cuencaRcVector","olmap","OlMap","target","layers","view","OlView","pixel","uri","_this2","feature","forEachFeatureAtPixel","console","log","get","fetch","then","response","json","scrollMore","delay","getLayers","array_","setVisible","_this3","setTarget","on","evt","displayFeatureInfo","components_Section","components_CardInfo","components_CardData","components_PlotlyTable","components_PlotlyChart","components_Mapa","components_LayerButton","components_LayerModal","showSections","Footer","App","components_Navbar","src_MapaContainer","components_Footer","Boolean","window","location","hostname","match","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7deef56d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rios_tdf.0c519cc9.geojson\";","module.exports = __webpack_public_path__ + \"static/media/cuenca_rio_grande.bd8a2e03.geojson\";","module.exports = __webpack_public_path__ + \"static/media/cuenca_rio_chico.a40ce913.geojson\";","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n    <nav className=\"navbar navbar-dark\" style={{backgroundColor: '#217dc5'}}>\r\n      <a className=\"navbar-brand\" href=\"#\">SIAC GIS</a>\r\n    </nav>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nfunction Mapa(props) {\r\n  return(\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          {props.children}\r\n          <div id=\"map\" style={{ width: \"100%\", height: \"600px\" }}>\r\n          </div>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n )\r\n}\r\n\r\nexport default Mapa;\r\n","import React from 'react';\r\n\r\nfunction Section(props) {\r\n  return(\r\n    <section className=\"mt-4\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </section>\r\n )\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nfunction CardData(props) {\r\n  return(\r\n      <div className=\"col-sm-6\">\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"table-responsive\">\r\n                {props.children}\r\n              </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n          \r\n )\r\n}\r\n\r\nexport default CardData;\r\n","import React from 'react';\r\n\r\nfunction CardInfo(props) {\r\n  return(\r\n      <div className=\"col-sm-12\">\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h2>{props.caudalesData.nombre}</h2>\r\n                <p>{props.caudalesData.descripcion}</p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n          \r\n )\r\n}\r\n\r\nexport default CardInfo;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nfunction PlotlyChart(props) {\r\n  return (\r\n    <Plot\r\n      data={[\r\n        {\r\n          x: props.x,\r\n          y: props.y,\r\n          type: 'scatter',\r\n          mode: 'lines+markers',\r\n          marker: {color: 'red'},\r\n        },\r\n      ]}\r\n      layout={{ title: props.caudalesData.caudal_desc,\r\n                xaxis: {\r\n                  title: props.xaxisTitle,\r\n                  showgrid: false,\r\n                  zeroline: false\r\n                },\r\n                yaxis: {\r\n                  title: props.yaxisTitle,\r\n                  showline: false\r\n                },\r\n                autosize: true,\r\n      }}\r\n      useResizeHandler\r\n      style={{ width: '100%', height: '100%' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PlotlyChart\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nfunction PlotlyTable(props) {\r\n  return (\r\n    <Plot\r\n      data={[{\r\n              type: 'table',\r\n              header: {\r\n                values: [[\"<b>Mes</b>\"], [\"<b>Q med (m3/s)</b>\"],\r\n                     [\"<b>Q min (m3/s)</b>\"], [\"<b>Q max (m3/s)</b>\"]],\r\n                align: \"center\",\r\n                line: {width: 1, color: 'black'},\r\n                fill: {color: \"grey\"},\r\n                font: {family: \"Arial\", size: 12, color: \"white\"}\r\n              },\r\n              cells: {\r\n                values: [\r\n                          props.x,\r\n                          props.caudalesData.caudales_promedio[0].data,\r\n                          props.caudalesData.caudales_promedio[1].data,\r\n                          props.caudalesData.caudales_promedio[2].data,\r\n                          ],\r\n                align: \"center\",\r\n                line: {color: \"black\", width: 1},\r\n                font: {family: \"Arial\", size: 11, color: [\"black\"]}\r\n              }\r\n            }]}\r\n      layout={{ title: props.caudalesData.caudal_desc,\r\n                //autosize: true,\r\n      }}\r\n      //useResizeHandler\r\n      style={{ width: '100%', height: '100%' }}\r\n    />\r\n  );\r\n\r\n}\r\n\r\nexport default PlotlyTable\r\n","import React from 'react';\r\nimport { faLayerGroup } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; \r\nimport 'ol/ol.css';\r\nimport './styles/LayerButton.css';\r\n//modal da control de capas\r\n\r\nfunction LayerButton(props) {\r\n  return (\r\n      <React.Fragment>\r\n      <div className=\"ol-unselectable ol-control layer__button\">\r\n        <button type=\"button\" className=\"\"  onClick={props.handleOpenModal}>\r\n          <FontAwesomeIcon icon={faLayerGroup} />\r\n        </button>\r\n      </div>  \r\n      </React.Fragment>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default LayerButton\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { faLayerGroup, faMap } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; \r\nimport './styles/LayerModal.css';\r\nimport { Form } from 'react-bootstrap';\r\n\r\n//usar radiobutton para capas y mapas\r\nfunction LayerModal(props) {\r\n  if (!props.modalIsOpen) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"Modal\">\r\n      <div className=\"Modal__container\">\r\n        <button onClick={props.handleCloseModal} className=\"Modal__close-button\">\r\n          X\r\n        </button>\r\n        <p><FontAwesomeIcon icon={faLayerGroup} /> Selección de Capas</p>\r\n        <Form.Group>\r\n          <Form.Check type=\"checkbox\" id=\"rios\" defaultChecked={props.checked} onChange={props.handleCheck} label=\"Ríos\" />\r\n          <Form.Check type=\"checkbox\" id=\"cuenca_rg\" defaultChecked={props.cuencaRgChecked} onChange={props.handleCheck} label=\"Cuenca del Rio Grande\" />\r\n          <Form.Check type=\"checkbox\" id=\"cuenca_rc\" defaultChecked={props.cuencaRcChecked} onChange={props.handleCheck} label=\"Cuenca del Río Chico\" />\r\n        </Form.Group>\r\n        <p><FontAwesomeIcon icon={faMap} /> Estilo de Mapas</p>\r\n        <Form.Group>\r\n          <Form.Check type=\"radio\" name=\"radios\" defaultChecked={props.mapaCheck === \"OSM\"} value=\"OSM\"  id=\"radios1\" label=\"OpenStreetMap\" onChange={props.handleCheckMap}/>\r\n          <Form.Check type=\"radio\" name=\"radios\" defaultChecked={props.mapaCheck === \"OSMLanscape\"} value=\"OSMLanscape\"  id=\"radios2\" label=\"OpenStreetMap Style (Curvas de Nivel)\" onChange={props.handleCheckMap}/>\r\n          <Form.Check type=\"radio\" name=\"radios\" defaultChecked={props.mapaCheck === \"Stamen\"} value=\"Stamen\" id=\"radios3\" label=\"Stamen Design\" onChange={props.handleCheckMap}/>\r\n          <Form.Check type=\"radio\" name=\"radios\" defaultChecked={props.mapaCheck === \"Bing\"} value=\"Bing\" id=\"radios4\" label=\"Bing Aerial (Aéreo/satelital)\" onChange={props.handleCheckMap}/>\r\n        </Form.Group>\r\n      </div>\r\n    </div>,\r\n    document.getElementById('layer-modal')\r\n  );\r\n  \r\n}\r\n\r\nexport default LayerModal\r\n\r\n","import React, { Component} from \"react\";\r\nimport Scroll from 'react-scroll';\r\nimport 'ol/ol.css';\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\n//import OlLayerTile from \"ol/layer/Tile\";\r\n//OpenStreetMap\r\nimport OlSourceOsm, {ATTRIBUTION} from \"ol/source/OSM\";\r\n//Bing\r\nimport BingMaps from 'ol/source/BingMaps';\r\n//Stamen\r\nimport Stamen from 'ol/source/Stamen';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport VectorSource from 'ol/source/Vector';\r\n//geojson\r\nimport Feature from 'ol/Feature';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport geojsonFile from './data/geojson-files/rios_tdf.geojson';\r\nimport cuencaRG from './data/geojson-files/cuenca_rio_grande.geojson';\r\nimport cuencaRC from './data/geojson-files/cuenca_rio_chico.geojson';\r\n//service\r\nimport { fetchCaudalesData } from './services/CaudalesService'; \r\n//components\r\nimport Mapa from './components/Mapa';\r\nimport Section from './components/Section';\r\nimport CardData from './components/CardData';\r\nimport CardInfo from './components/CardInfo';\r\nimport PlotlyChart from './components/PlotlyChart';\r\nimport PlotlyTable from './components/PlotlyTable';\r\nimport LayerButton from './components/LayerButton';\r\nimport LayerModal from './components/LayerModal';\r\n\r\nvar scroll = Scroll.animateScroll;\r\n\r\nclass MapaContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        featureName:'',\r\n        featureTable:[],\r\n        center: [-7573454.810866, -7162149.550321],\r\n        zoom: 8,\r\n        x : ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\r\n        y : [],\r\n        xaxisTitle : 'Mes',\r\n        yaxisTitle : '',\r\n        checked:false,\r\n        cuencaRgChecked:false,\r\n        cuencaRcChecked:false,\r\n        mapaCheck: 'OSM',\r\n        modalIsOpen:false,\r\n        caudalesData:{},\r\n        showSection:false\r\n     };\r\n     //Mapa. OpenStreetMap tileLayer\r\n     this.osmLayer = new TileLayer({\r\n       source: new OlSourceOsm({\r\n            })\r\n     });\r\n\r\n     //Mapa. OpenStreetMap lanscape curvas de nivel tileLayer\r\n     this.osmLanscape = new TileLayer({\r\n       visible:false, \r\n       source: new OlSourceOsm({\r\n          attributions: [\r\n            'All maps © <a href=\"http://www.opencyclemap.org/?layers=00B00\">OpenCycleMap</a>',\r\n            ATTRIBUTION\r\n          ],\r\n          url: 'https://tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey=5944047da3314986b605f064897c668c'\r\n            })\r\n     });\r\n\r\n     //Mapa. Stamen tileLayer\r\n     this.stamenLayer = new TileLayer({\r\n       visible: false,\r\n       source: new Stamen({\r\n          layer: 'watercolor',\r\n            })\r\n     });\r\n\r\n     //Mapa. Bing\r\n     this.bingMaps = new TileLayer({\r\n      visible: false,\r\n      source: new BingMaps({\r\n            key:'AtBMqCJREGAL9f2_1EKoTkUp_OPgTAPMxQI-m-kGrPV1y-8-6c4-5dq-QVygo9ff',\r\n            imagerySet:'Aerial'\r\n          })\r\n     }) \r\n    //geojson\r\n    this.vectorSource = new VectorSource({\r\n     url:geojsonFile,\r\n     format:new GeoJSON()\r\n    });\r\n\r\n    this.vector = new VectorLayer({\r\n      visible: false,\r\n      source: this.vectorSource\r\n    });\r\n\r\n    //geojson cuenca rio grande\r\n    this.cuencaRgSource = new VectorSource({\r\n      url: cuencaRG,\r\n      format:new GeoJSON()\r\n    });\r\n\r\n    this.cuencaRgVector = new VectorLayer({\r\n      visible: false,\r\n      source:this.cuencaRgSource\r\n    })\r\n\r\n    //geojson cuenca rio chico\r\n    this.cuencaRcSource = new VectorSource({\r\n      url: cuencaRC,\r\n      format:new GeoJSON()\r\n    });\r\n\r\n    this.cuencaRcVector = new VectorLayer({\r\n      visible: false,\r\n      source:this.cuencaRcSource\r\n    })\r\n\r\n    this.olmap = new OlMap({\r\n      target: null,\r\n      layers: [\r\n        this.osmLayer,\r\n        this.osmLanscape,\r\n        this.stamenLayer,\r\n        this.bingMaps,\r\n        this.vector,\r\n        this.cuencaRgVector,\r\n        this.cuencaRcVector\r\n\r\n      ],\r\n      view: new OlView({\r\n        center: this.state.center,\r\n        zoom: this.state.zoom,\r\n        //projection: 'EPSG:4326' //world geodetic system\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n  //función que toma detos del layer geojson y setea variables de estado, que se visualizan en el dom.\r\n  displayFeatureInfo(pixel) {\r\n\r\n     var feature = this.olmap.forEachFeatureAtPixel(pixel, function(feature) {\r\n       console.log(feature);\r\n       return feature;\r\n     });\r\n\r\n     if (feature) {\r\n        //Obtengo los datos desde el archivo json\r\n        fetchCaudalesData(feature.get(\"URL\"))\r\n        .then((response)=>{\r\n          //console.log(response.caudales_promedio[0].data)\r\n          this.setState({featureName:feature.get(\"Name\"),\r\n                      featureTable:feature.get(\"table\"),\r\n                      center: [0,0],\r\n                      caudalesData:response,\r\n                      showSection:true,\r\n        })\r\n       })\r\n       //preparo evento para scrollar luego de 500 milisegundos\r\n       scroll.scrollMore(600, { delay: 500 })\r\n\r\n     }else{\r\n       this.setState({featureName:'',\r\n                       showSection:false,\r\n\r\n        })\r\n\r\n     }\r\n  }\r\n\r\n  //control de capas\r\n  async capaControl(event){\r\n\r\n     switch(event.target.id){\r\n      case 'rios':\r\n        await this.setState({\r\n          checked:!this.state.checked\r\n        })\r\n        await this.olmap.getLayers().array_[4].setVisible(this.state.checked)\r\n      break;\r\n      case 'cuenca_rg':\r\n        await this.setState({\r\n          cuencaRgChecked:!this.state.cuencaRgChecked\r\n        })\r\n        await this.olmap.getLayers().array_[5].setVisible(this.state.cuencaRgChecked)\r\n      break;\r\n      case 'cuenca_rc':\r\n        await this.setState({\r\n          cuencaRcChecked:!this.state.cuencaRcChecked\r\n        })\r\n        await this.olmap.getLayers().array_[6].setVisible(this.state.cuencaRcChecked)  \r\n      break;\r\n      default: //no hace nada  \r\n    }  \r\n\r\n  }\r\n\r\n  \r\n  //control de mapas\r\n  mapaStyleControl(event){\r\n\r\n    switch(event.target.value){\r\n      case 'OSM':\r\n        this.setState({mapaCheck:event.target.value})\r\n        this.olmap.getLayers().array_[1].setVisible(false)\r\n        this.olmap.getLayers().array_[2].setVisible(false)\r\n        this.olmap.getLayers().array_[3].setVisible(false)\r\n        this.olmap.getLayers().array_[0].setVisible(true)\r\n      break;\r\n      case 'OSMLanscape':\r\n        this.setState({mapaCheck:event.target.value})\r\n        this.olmap.getLayers().array_[0].setVisible(false)\r\n        this.olmap.getLayers().array_[2].setVisible(false)\r\n        this.olmap.getLayers().array_[3].setVisible(false)\r\n        this.olmap.getLayers().array_[1].setVisible(true)\r\n      break;\r\n      case 'Stamen':\r\n        this.setState({mapaCheck:event.target.value})\r\n        this.olmap.getLayers().array_[0].setVisible(false)\r\n        this.olmap.getLayers().array_[1].setVisible(false)\r\n        this.olmap.getLayers().array_[3].setVisible(false)\r\n        this.olmap.getLayers().array_[2].setVisible(true)\r\n      break;  \r\n      case 'Bing':\r\n        console.log( this.olmap.getLayers().array_)\r\n        this.setState({mapaCheck:event.target.value})\r\n        this.olmap.getLayers().array_[0].setVisible(false)\r\n        this.olmap.getLayers().array_[1].setVisible(false)\r\n        this.olmap.getLayers().array_[2].setVisible(false)\r\n        this.olmap.getLayers().array_[3].setVisible(true)\r\n      break; \r\n      default: //no hace nada\r\n    }  \r\n\r\n  }\r\n\r\n  \r\n  /*para que funcionen los props desde \r\n  el mapa al button o modal se debe mover o clickear el mapa.*/\r\n  componentDidMount() { \r\n\r\n    this.olmap.setTarget(\"map\");\r\n\r\n    this.olmap.on(\"moveend\", () => {\r\n      console.log('move')\r\n    });\r\n\r\n    //Evento de click sobre el mapa\r\n    this.olmap.on('click', (evt) => {\r\n            this.displayFeatureInfo(evt.pixel);\r\n          });\r\n  }\r\n\r\n  /*shouldComponentUpdate(nextProps, nextState) {\r\n    let center = this.olmap.getView().getCenter();\r\n    let zoom = this.olmap.getView().getZoom();\r\n    if (center === nextState.center && zoom === nextState.zoom) return false;\r\n    return true;\r\n  }*/\r\n\r\n  //para el control de los mapas\r\n  handleCheckMap = (event) => {\r\n\r\n    this.mapaStyleControl(event)\r\n  }\r\n\r\n  //para el control de las capas\r\n  handleCheckCapa = (event) => {\r\n    this.capaControl(event)\r\n  }\r\n\r\n \r\n  handleCloseModal = e => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n\r\n  handleOpenModal = e => {\r\n    this.setState({ modalIsOpen: true });\r\n  };\r\n\r\n  //muestra las secciones de la página, con datos, luego de hacer click en una capa del mapa\r\n  showSections(){\r\n    if(this.state.showSection){\r\n      \r\n      return <React.Fragment>\r\n              <Section>\r\n                <CardInfo\r\n                  caudalesData={this.state.caudalesData}\r\n                />\r\n              </Section>\r\n              <Section> \r\n                <CardData>\r\n                  <PlotlyTable\r\n                    caudalesData={this.state.caudalesData}\r\n                    x={this.state.x}\r\n                  />\r\n                </CardData>\r\n                <CardData>\r\n                  <PlotlyChart\r\n                    caudalesData = {this.state.caudalesData} \r\n                    x={this.state.x}\r\n                    y={this.state.caudalesData.caudales_promedio[0].data}\r\n                    xaxisTitle={this.state.xaxisTitle}\r\n                    yaxisTitle={this.state.caudalesData.caudales_promedio[0].title}\r\n                  />\r\n                </CardData>\r\n              </Section> \r\n              <Section> \r\n                <CardData>\r\n                  <PlotlyChart\r\n                    caudalesData = {this.state.caudalesData} \r\n                    x={this.state.x}\r\n                    y={this.state.caudalesData.caudales_promedio[1].data}\r\n                    xaxisTitle={this.state.xaxisTitle}\r\n                    yaxisTitle={this.state.caudalesData.caudales_promedio[1].title}\r\n                  />\r\n                </CardData>\r\n                 <CardData>\r\n                  <PlotlyChart\r\n                    caudalesData = {this.state.caudalesData} \r\n                    x={this.state.x}\r\n                    y={this.state.caudalesData.caudales_promedio[2].data}\r\n                    xaxisTitle={this.state.xaxisTitle}\r\n                    yaxisTitle={this.state.caudalesData.caudales_promedio[2].title}\r\n                  />\r\n                </CardData>\r\n              </Section> \r\n            </React.Fragment>         \r\n    }\r\n     \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Mapa>\r\n          <LayerButton\r\n            handleOpenModal={this.handleOpenModal}\r\n          />\r\n          <LayerModal   \r\n            checked={this.state.checked} \r\n            cuencaRgChecked={this.state.cuencaRgChecked}\r\n            cuencaRcChecked={this.state.cuencaRcChecked}\r\n            handleCheck={this.handleCheckCapa} \r\n            handleCheckMap={this.handleCheckMap} \r\n            mapaCheck={this.state.mapaCheck}\r\n            modalIsOpen={this.state.modalIsOpen}\r\n            handleCloseModal={this.handleCloseModal}\r\n          />\r\n        </Mapa>\r\n        {this.showSections()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapaContainer;\r\n","export function fetchCaudalesData(uri) {\r\n  return fetch(uri)\r\n    .then(response => response.json())\r\n    .then(response => response);\r\n}","import React from 'react';\r\n\r\nfunction Footer(){\r\n \r\n    return (\r\n      <footer style={{backgroundColor: '#217dc5'}} className=\"pb-4 pt-4\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n              <p style={{color: 'white'}}>Sistema de información ambiental. Cuencas de estepa de Tierra del Fuego.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n\r\n\r\n    );\r\n  \r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n//Navbar\r\nimport Navbar from './components/Navbar';\r\nimport MapaContainer from './MapaContainer';\r\nimport Footer from './components/Footer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar/>\r\n        <MapaContainer/>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}